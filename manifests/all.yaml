apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-vault-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-vault-demo
  template:
    metadata:
      labels:
        app: nginx-vault-demo
    spec:
      containers:
      - name: nginx
        image: nginx:stable
        ports:
        - containerPort: 8080
        env:
        - name: MY_SECRET
          valueFrom:
            secretKeyRef:
              name: my-nginx
              key: MY_SECRET
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "envsubst '$MY_SECRET' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf"]
      volumes:
      - name: nginx-config
        configMap:
          name: my-nginx
          items:
          - key: nginx.conf.template
            path: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nginx
data:
  nginx.conf.template: |  # Rename to .template
    events {}
    http {
        server {
            listen 8080;
            location / {
                return 200 "$MY_SECRET";
            }
        }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: my-nginx
stringData:
  MY_SECRET: "test-secret-value"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-vault-demo
spec:
  selector:
    app: nginx-vault-demo
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
